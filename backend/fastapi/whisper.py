import os
import tempfile
from fastapi import FastAPI, File, UploadFile
from fastapi.responses import JSONResponse
from transformers import pipeline
from pydub import AudioSegment

ffmpeg_path = r"C:\ffmpeg\bin\ffmpeg.exe"
AudioSegment.converter = ffmpeg_path
AudioSegment.ffmpeg = ffmpeg_path 

app = FastAPI()
asr_pipeline = pipeline("automatic-speech-recognition", model="t3ngr1/whisper-small-kk")

@app.post("/transcribe")
async def transcribe_audio(file: UploadFile = File(...)):
    print("üì• –ü–æ–ª—É—á–µ–Ω —Ñ–∞–π–ª:", file.filename)

    if not file.filename.endswith((".wav", ".m4a")):
        print("–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç:", file.filename)
        return JSONResponse(status_code=400, content={"error": "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ .wav –∏ .m4a —Ñ–∞–π–ª—ã."})

    temp_dir = tempfile.mkdtemp()
    input_path = os.path.join(temp_dir, file.filename)

    with open(input_path, "wb") as f:
        content = await file.read()
        f.write(content)

    print("–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª:", input_path)

    try:
        output_path = os.path.join(temp_dir, "converted.wav")
        audio = AudioSegment.from_file(input_path)
        audio = audio.set_frame_rate(16000).set_channels(1)
        audio.export(output_path, format="wav")
        print("üîÅ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ:", output_path)
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:", e)
        return JSONResponse(status_code=500, content={"error": "–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞—É–¥–∏–æ."})

    try:
        result = asr_pipeline(output_path)
        print("–†–∞—Å–ø–æ–∑–Ω–∞–Ω–æ:", result["text"])
        return {"text": result["text"]}
    except Exception as e:
        print("–û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è:", e)
        return JSONResponse(status_code=500, content={"error": "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–∏ —Ä–µ—á–∏."})
